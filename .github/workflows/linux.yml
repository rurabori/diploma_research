name: linux

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    container:
      image: rurabori/diploma:ubuntu-20.04

    env:
      CXX: clang++-12
      CC: clang-12
      CUDACXX: /usr/local/cuda/bin/nvcc
      CONAN_USER_HOME: ${{github.workspace}}

    steps:
      - uses: actions/checkout@v2

      - name: Install conan packages
        run: conan install . -if ${{github.workspace}}/build -s build_type=${{env.BUILD_TYPE}} -s compiler.cppstd=20 -s compiler=clang -s compiler.version=12 --build missing

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CUDA_ARCHITECTURES=75 -G "Ninja"

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        run: ctest -C ${{env.BUILD_TYPE}} --test-dir ${{github.workspace}}/build
