name: linux

on:
  push:
    branches: [main]
    paths-ignore:
      - "docs/**"
  pull_request:
    branches: [main]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  gcc:
    runs-on: ubuntu-latest

    env:
      CONAN_USER_HOME: ${{github.workspace}}

    steps:
      - uses: actions/checkout@v2

      - name: "Install GCC"
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 11

      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: Install MPI
        run: sudo apt-get install mpi-default-dev

      - name: Add conan remotes
        run: >
          pip3 install --upgrade conan &&
          conan config init &&
          conan config set general.revisions_enabled=1 &&
          conan remote add rurabori-conan https://rurabori.jfrog.io/artifactory/api/conan/rurabori-conan &&
          conan user -p ${{ secrets.ARTIFACTORY_CONAN_TOKEN }} -r rurabori-conan ${{ secrets.ARTIFACTORY_USERNAME }}

      - name: Cache Conan
        uses: actions/cache@v2
        with:
          path: ${{ env.CONAN_USER_HOME }}/.conan
          key: ${{matrix.image}}-${{ runner.os }}-${{ hashFiles('conanfile.py') }}-${{ env.BUILD_TYPE }}-${{ env.CC }}-${{ env.CXX }}-20

      - name: Configure CMake
        working-directory: ${{github.workspace}}
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX="${{github.workspace}}/install" -G "Ninja"

      - name: Upload conan packages to artifactory
        run: conan upload '*' --confirm --all --parallel -r rurabori-conan

      - name: Build
        run: cmake --build ${{github.workspace}}/build

      - name: Test
        run: ctest -C ${{env.BUILD_TYPE}} --test-dir ${{github.workspace}}/build

      - name: Package
        run: cd ${{github.workspace}}/build && cpack -G ZIP

      - name: Upload to artifactory
        uses: ./.github/actions/artifactory_upload
        with:
          input_file_path: ${{ github.workspace }}/build/dim-*-Linux.zip
          storage_path: dim/ubuntu/${{ github.run_id }}/dim.zip
          username: ${{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_GENERIC_TOKEN }}
